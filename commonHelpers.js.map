{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst selector = document.querySelector(\"#datetime-picker\");\nconst start = document.querySelector(\"[data-start]\");\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (selectedDates[0] <= options.defaultDate) {\n            start.setAttribute(\"disabled\", \"\");\n            iziToast.error({\n                message: 'Please choose a date in the future',\n                position: \"topRight\",\n            });\n        } else {\n            start.removeAttribute(\"disabled\");\n            userSelectedDate = selectedDates[0];\n        }\n    },\n};\n\nflatpickr(selector, options);\n\n\nconst addLeadingZero = value => {\n    if (value <= 9) {\n        return value.toString().padStart(2, \"0\");\n    } else {\n        return value;\n    }\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n    \n    daysValue.textContent = addLeadingZero(days);\n    hoursValue.textContent = addLeadingZero(hours);\n    minutesValue.textContent = addLeadingZero(minutes);\n    secondsValue.textContent = addLeadingZero(seconds);    \n}\n\nstart.addEventListener(\"click\", () => {\n    selector.setAttribute(\"disabled\", \"\");\n    start.setAttribute(\"disabled\", \"\");\n    const intervalId = setInterval(() => {\n        const ms = userSelectedDate - Date.now();\n        convertMs(ms);\n        if (ms <= 0) {\n            clearInterval(intervalId);\n            convertMs(0);\n            iziToast.success({\n                title: 'Time is up!',\n                message: 'You can reload the page to restart the timer.',\n                position: \"topRight\",\n            });\n        }\n    }, 1000); \n});"],"names":["selector","start","daysValue","hoursValue","minutesValue","secondsValue","userSelectedDate","options","selectedDates","iziToast","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","intervalId"],"mappings":"+HAMA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACfA,EAAc,IAAMD,EAAQ,aAC5BN,EAAM,aAAa,WAAY,EAAE,EACjCQ,EAAS,MAAM,CACX,QAAS,qCACT,SAAU,UAC1B,CAAa,IAEDR,EAAM,gBAAgB,UAAU,EAChCK,EAAmBE,EAAc,GAExC,CACL,EAEAE,EAAUV,EAAUO,CAAO,EAG3B,MAAMI,EAAiBC,GACfA,GAAS,EACFA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAEhCA,EAIf,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAC/CI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElEZ,EAAU,YAAcS,EAAeI,CAAI,EAC3CZ,EAAW,YAAcQ,EAAeK,CAAK,EAC7CZ,EAAa,YAAcO,EAAeM,CAAO,EACjDZ,EAAa,YAAcM,EAAeO,CAAO,CACrD,CAEAjB,EAAM,iBAAiB,QAAS,IAAM,CAClCD,EAAS,aAAa,WAAY,EAAE,EACpCC,EAAM,aAAa,WAAY,EAAE,EACjC,MAAMkB,EAAa,YAAY,IAAM,CACjC,MAAML,EAAKR,EAAmB,KAAK,IAAG,EACtCO,EAAUC,CAAE,EACRA,GAAM,IACN,cAAcK,CAAU,EACxBN,EAAU,CAAC,EACXJ,EAAS,QAAQ,CACb,MAAO,cACP,QAAS,gDACT,SAAU,UAC1B,CAAa,EAER,EAAE,GAAI,CACX,CAAC"}